name: mosaica
services:
  api:
    image: mosaica-api
    build:
      context: .
      target: development
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    ports:
      - '${PORT}:${PORT}'

  postgres:
    image: postgres:alpine
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - '${DATABASE_PORT:-5432}:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data/pgdata
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}']
      interval: 10s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:alpine
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - '${REDIS_PORT:-6379}:6379'
    volumes:
      - redisdata:/data
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    command: >
      sh -c '
          mkdir -p /usr/local/etc/redis &&
          echo "bind 0.0.0.0" > /usr/local/etc/redis/redis.conf &&
          echo "requirepass $REDIS_PASSWORD" >> /usr/local/etc/redis/redis.conf &&
          echo "appendonly yes" >> /usr/local/etc/redis/redis.conf &&
          echo "appendfsync everysec" >> /usr/local/etc/redis/redis.conf &&
          echo "user default on >$REDIS_PASSWORD ~* +@all" > /usr/local/etc/redis/users.acl &&
          redis-server /usr/local/etc/redis/redis.conf --aclfile /usr/local/etc/redis/users.acl
      '
    healthcheck:
      test: ['CMD', 'redis-cli', '-a', '$REDIS_PASSWORD', 'ping']
      interval: 10s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  minio:
    image: quay.io/minio/minio:latest
    environment:
      - MINIO_ROOT_USER=${S3_ACCESS_KEY_ID}
      - MINIO_ROOT_PASSWORD=${S3_SECRET_ACCESS_KEY}
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - miniodata:/data
    entrypoint: >
      /bin/sh -c '
        isAlive() { curl -sf http://127.0.0.1:9000/minio/health/live; }
        minio $0 "$@" --quiet & echo $! > /tmp/minio.pid
        while ! isAlive; do sleep 0.1; done
        mc alias set minio http://127.0.0.1:9000 ${S3_ACCESS_KEY_ID} ${S3_SECRET_ACCESS_KEY}
        mc mb minio/${S3_BUCKET_NAME} || true
        mc anonymous set download minio/${S3_BUCKET_NAME}
        kill -s INT $(cat /tmp/minio.pid) && rm /tmp/minio.pid
        while isAlive; do sleep 0.1; done
        exec minio $0 "$@"
      '
    command: server /data --console-address ':9001'
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://127.0.0.1:9000/minio/health/live']
      interval: 10s
      start_interval: 1s
      start_period: 10s
    restart: unless-stopped

volumes:
  pgdata:
  redisdata:
  miniodata:
